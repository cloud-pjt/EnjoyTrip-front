name: Build and Push Vue Frontend to ECR

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ECR_REGISTRY: 868422696413.dkr.ecr.ap-northeast-2.amazonaws.com
      ECR_REPOSITORY: test

    steps:
      # 1. Checkout 코드
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Vue 빌드 (dist 생성)
      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      # 4. 현재 시간 태그 (선택)
      - name: Get current time
        id: current-time
        run: echo "formattedTime=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Show Current Time
        run: echo "Current time is ${{ steps.current-time.outputs.formattedTime }}"
             echo "IMAGE_TAG=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      # 5. AWS 로그인
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 6. Docker 빌드 & Push
      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t $ECR_REPOSITORY:${{ env.IMAGE_TAG }} .
          docker tag $ECR_REPOSITORY:${{ env.IMAGE_TAG }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}
          docker tag $ECR_REPOSITORY:${{ env.IMAGE_TAG }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Checkout manifests repo
        uses: actions/checkout@v4
        with:
          repository: Dhchung12/cloud_project
          token: ${{ secrets.GH_PAT }}

      - name: Update frontend manifest
        run: |
          cd k8s/frontend
          sed -i "s|^\(\s*image:\s*\).*|\1${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ env.IMAGE_TAG }}|" deployment-frontend.yaml

      - name: Commit and push
        run: |
          cd manifests
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -am "Update frontend image to ${{ env.IMAGE_TAG }}"
          git push
